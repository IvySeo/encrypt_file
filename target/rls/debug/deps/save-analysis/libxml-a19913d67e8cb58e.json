{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6","program":"C:\\Users\\M7\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","xml","C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a19913d67e8cb58e","-C","extra-filename=-a19913d67e8cb58e","--out-dir","c:\\Users\\M7\\Desktop\\encrypt\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\M7\\Desktop\\encrypt\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\M7\\Desktop\\encrypt\\target\\rls\\debug\\deps\\libbitflags-87e1698985a164f6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\M7\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\M7\\Desktop\\encrypt\\target\\rls\\debug\\deps\\libxml-a19913d67e8cb58e.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[2273561999431682660,1421494015036366436]},"crate_root":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src","external_crates":[{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}},{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","num":14,"id":{"name":"bitflags","disambiguator":[15136789057217047867,3354900553849374839]}}],"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":240,"byte_end":251,"line_start":11,"line_end":11,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":269,"byte_end":281,"line_start":12,"line_end":12,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":299,"byte_end":310,"line_start":13,"line_end":13,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":328,"byte_end":341,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37677,"byte_end":37689,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37713,"byte_end":37721,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37836,"byte_end":37841,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37843,"byte_end":37852,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136403,"byte_end":136409,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":653}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136434,"byte_end":136446,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136450,"byte_end":136455,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"name":"Error","value":"","parent":{"krate":0,"index":653}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136479,"byte_end":136492,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":653}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136516,"byte_end":136524,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":653}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":68},{"krate":0,"index":87},{"krate":0,"index":109},{"krate":0,"index":141},{"krate":0,"index":243},{"krate":0,"index":653},{"krate":0,"index":845}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"! This crate currently provides an almost XML 1.0/1.1-compliant pull parser.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":107,"byte_end":185,"line_start":6,"line_end":6,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":487,"byte_end":500,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"! Contains several macros used in this crate.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":502,"byte_end":549,"line_start":3,"line_end":3,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":862},{"krate":0,"index":888},{"krate":0,"index":885},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":870},{"krate":0,"index":867},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":35},{"krate":0,"index":40},{"krate":0,"index":890},{"krate":0,"index":906},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":896},{"krate":0,"index":894},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":61},{"krate":0,"index":64}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[{"value":"! Contains XML qualified names manipulation types and functions.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1362,"byte_end":1428,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1429,"byte_end":1432,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3383,"byte_end":3387,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[{"value":"/ Represents a qualified XML name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1502,"byte_end":1538,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1539,"byte_end":1542,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A qualified name always consists at least of a local name. It can optionally contain","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1543,"byte_end":1631,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ a prefix; when reading an XML document, if it contains a prefix, it must also contain a","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1632,"byte_end":1723,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ namespace URI, but this is not enforced statically; see below. The name can contain a","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1724,"byte_end":1813,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ namespace without a prefix; in that case a default, empty prefix is assumed.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1814,"byte_end":1894,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1895,"byte_end":1898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When writing XML documents, it is possible to omit the namespace URI, leaving only","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1899,"byte_end":1985,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ the prefix. In this case the writer will check that the specifed prefix is bound to some","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":1986,"byte_end":2078,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ URI in the current namespace context. If both prefix and namespace URI are specified,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2079,"byte_end":2168,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ it is checked that the current namespace context contains this exact correspondence","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2169,"byte_end":2256,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/ between prefix and namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2257,"byte_end":2294,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2295,"byte_end":2298,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Prefixes and URIs","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2299,"byte_end":2322,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2323,"byte_end":2326,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A qualified name with a prefix must always contain a proper namespace URI --- names with","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2327,"byte_end":2419,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ a prefix but without a namespace associated with that prefix are meaningless. However,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2420,"byte_end":2510,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/ it is impossible to obtain proper namespace URI by a prefix without a context, and such","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2511,"byte_end":2602,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/ context is only available when parsing a document (or it can be constructed manually","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2603,"byte_end":2691,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ when writing a document). Tying a name to a context statically seems impractical. This","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2692,"byte_end":2782,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ may change in future, though.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2783,"byte_end":2816,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2817,"byte_end":2820,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Conversions","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2821,"byte_end":2838,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2839,"byte_end":2842,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `Name` implements some `From` instances for conversion from strings and tuples. For example:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2843,"byte_end":2939,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2940,"byte_end":2943,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2944,"byte_end":2955,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use xml::name::Name;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2956,"byte_end":2982,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ let n1: Name = \"p:some-name\".into();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":2983,"byte_end":3023,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let n2: Name = (\"p\", \"some-name\").into();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3024,"byte_end":3069,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3070,"byte_end":3073,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(n1, n2);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3074,"byte_end":3097,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(n1.local_name, \"some-name\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3098,"byte_end":3141,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(n1.prefix, Some(\"p\"));","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3142,"byte_end":3179,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert!(n1.namespace.is_none());","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3180,"byte_end":3216,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3217,"byte_end":3224,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3225,"byte_end":3228,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is added to support easy specification of XML elements when writing XML documents.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3229,"byte_end":3320,"line_start":46,"line_end":46,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3455,"byte_end":3465,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3398,"byte_end":3446,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3548,"byte_end":3557,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3481,"byte_end":3539,"line_start":52,"line_end":52,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3636,"byte_end":3642,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3581,"byte_end":3627,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4613,"byte_end":4621,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"fn (&self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[{"value":"/ Returns an owned variant of the qualified name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4550,"byte_end":4601,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4930,"byte_end":4935,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"fn (local_name: &str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing plain local name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4840,"byte_end":4904,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4909,"byte_end":4918,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5187,"byte_end":5195,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"fn (local_name: &'a str, prefix: &'a str) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance with the given local name and prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5090,"byte_end":5161,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5166,"byte_end":5175,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5530,"byte_end":5539,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"fn (local_name: &'a str, namespace: &'a str, prefix: Option<&'a str>) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing a qualified name with or without a prefix and","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5382,"byte_end":5474,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ with a namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5479,"byte_end":5504,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5509,"byte_end":5518,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5988,"byte_end":5995,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a correct XML representation of this local name and prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5760,"byte_end":5831,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5836,"byte_end":5839,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method is different from the autoimplemented `to_string()` because it does not","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5844,"byte_end":5931,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ include namespace URI in the result.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":5936,"byte_end":5976,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6328,"byte_end":6340,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"fn (&self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a structure which can be displayed with `std::fmt` machinery to obtain this","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6066,"byte_end":6153,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ local name and prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6158,"byte_end":6184,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6189,"byte_end":6192,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This method is needed for efficiency purposes in order not to create unnecessary","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6197,"byte_end":6281,"line_start":142,"line_end":142,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6286,"byte_end":6302,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6307,"byte_end":6316,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6507,"byte_end":6518,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"/ Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6402,"byte_end":6481,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6486,"byte_end":6495,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6726,"byte_end":6737,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[{"value":"/ A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6589,"byte_end":6680,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/ displayed in an XML document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6681,"byte_end":6714,"line_start":157,"line_end":157,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7213,"byte_end":7222,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[{"value":"/ An owned variant of `Name`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7058,"byte_end":7089,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7090,"byte_end":7093,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Everything about `Name` applies to this structure as well.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7094,"byte_end":7156,"line_start":171,"line_end":171,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7286,"byte_end":7296,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7229,"byte_end":7277,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7378,"byte_end":7387,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7311,"byte_end":7369,"line_start":177,"line_end":177,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7465,"byte_end":7471,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7410,"byte_end":7456,"line_start":180,"line_end":180,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7744,"byte_end":7750,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[{"value":"/ Constructs a borrowed `Name` based on this owned name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7674,"byte_end":7732,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8062,"byte_end":8067,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"fn <S> (local_name: S) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a plain local name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7965,"byte_end":8036,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8041,"byte_end":8050,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8415,"byte_end":8424,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"fn <S1, S2, S3> (local_name: S1, namespace: S2, prefix: Option<S3>) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a qualified name with or without","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8262,"byte_end":8346,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ a prefix and with a namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8351,"byte_end":8389,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8394,"byte_end":8403,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8888,"byte_end":8898,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional prefix by reference, equivalent to `self.borrow().prefix`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8750,"byte_end":8831,"line_start":224,"line_end":224,"column_start":5,"column_end":86}},{"value":"/ but avoids extra work.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8836,"byte_end":8862,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8867,"byte_end":8876,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9121,"byte_end":9134,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional namespace by reference, equivalen to `self.borrow().namespace`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":8978,"byte_end":9064,"line_start":231,"line_end":231,"column_start":5,"column_end":91}},{"value":"/ but avoids extra work.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9069,"byte_end":9095,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9100,"byte_end":9109,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":908},{"krate":0,"index":933},{"krate":0,"index":930},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":915},{"krate":0,"index":912},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":935},{"krate":0,"index":950},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":940},{"krate":0,"index":938},{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[{"value":"! Contains XML attributes manipulation types and functions.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11304,"byte_end":11365,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11366,"byte_end":11369,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11631,"byte_end":11640,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[{"value":"/ A borrowed version of an XML attribute.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11450,"byte_end":11493,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11494,"byte_end":11497,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Consists of a borrowed qualified name and a borrowed string value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11498,"byte_end":11568,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11679,"byte_end":11683,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11651,"byte_end":11670,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11729,"byte_end":11734,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11700,"byte_end":11720,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12044,"byte_end":12052,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"fn (&self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"/ Creates an owned attribute out of this borrowed one.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11962,"byte_end":12018,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12023,"byte_end":12032,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12319,"byte_end":12322,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"fn (name: Name<'a>, value: &'a str) -> Attribute<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"/ Creates a borrowed attribute using the provided borrowed name and a borrowed string value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12199,"byte_end":12293,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12298,"byte_end":12307,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12631,"byte_end":12645,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[{"value":"/ An owned version of an XML attribute.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12462,"byte_end":12503,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12504,"byte_end":12507,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Consists of an owned qualified name and an owned string value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12508,"byte_end":12574,"line_start":49,"line_end":49,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12680,"byte_end":12684,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12652,"byte_end":12671,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12731,"byte_end":12736,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12702,"byte_end":12722,"line_start":55,"line_end":55,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12843,"byte_end":12849,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"fn (&self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[{"value":"/ Returns a borrowed `Attribute` out of this owned one.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12774,"byte_end":12831,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":13099,"byte_end":13102,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"fn <S> (name: OwnedName, value: S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"/ Creates a new owned attribute using the provided owned name and an owned string value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12983,"byte_end":13073,"line_start":68,"line_end":68,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":13078,"byte_end":13087,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":952},{"krate":0,"index":964},{"krate":0,"index":962},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":965},{"krate":0,"index":978},{"krate":0,"index":976},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[{"value":"! Contains common types and functions used throughout the library.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":13914,"byte_end":13982,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14104,"byte_end":14116,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[{"value":"/ Represents a position inside some textual document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":13999,"byte_end":14054,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14156,"byte_end":14159,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[{"value":"/ Row, counting from 0","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14123,"byte_end":14147,"line_start":8,"line_end":8,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14206,"byte_end":14212,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[{"value":"/ Column, counting from 0","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14170,"byte_end":14197,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14343,"byte_end":14346,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"fn () -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"/ Creates a new position initialized to the beginning of the document","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14246,"byte_end":14317,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14322,"byte_end":14331,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14482,"byte_end":14489,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"fn (&mut self, count: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"/ Advances the position in a line","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14421,"byte_end":14456,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14461,"byte_end":14470,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14648,"byte_end":14662,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"fn (&mut self, width: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"/ Advances the position in a line to the next tab position","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14562,"byte_end":14622,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14627,"byte_end":14636,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14868,"byte_end":14876,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"/ Advances the position to the beginning of the next line","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14783,"byte_end":14842,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14847,"byte_end":14856,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15439,"byte_end":15447,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[{"value":"/ Get the position in the document corresponding to the object","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15299,"byte_end":15363,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15364,"byte_end":15367,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by parsers, lexers and errors.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15368,"byte_end":15428,"line_start":58,"line_end":58,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15537,"byte_end":15545,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"fn (&self) -> TextPosition","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[{"value":"/ Returns the current position or a position corresponding to the object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15454,"byte_end":15529,"line_start":60,"line_end":60,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15802,"byte_end":15811,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[{"value":"/ XML version 1.0.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15777,"byte_end":15797,"line_start":74,"line_end":74,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15843,"byte_end":15852,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[{"value":"/ XML version 1.1.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15818,"byte_end":15838,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15760,"byte_end":15770,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"XmlVersion::{Version10, Version11}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":968}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[{"value":"/ XML version enumeration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15684,"byte_end":15712,"line_start":71,"line_end":71,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16451,"byte_end":16469,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a white space character (`S`)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16236,"byte_end":16307,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16308,"byte_end":16369,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16370,"byte_end":16373,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16374,"byte_end":16443,"line_start":99,"line_end":99,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16808,"byte_end":16826,"line_start":111,"line_end":111,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name start character (`NameStartChar`)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16582,"byte_end":16664,"line_start":107,"line_end":107,"column_start":1,"column_end":83}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16665,"byte_end":16726,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16727,"byte_end":16730,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16731,"byte_end":16800,"line_start":110,"line_end":110,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":17502,"byte_end":17514,"line_start":128,"line_end":128,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name character (`NameChar`)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":17287,"byte_end":17358,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":17359,"byte_end":17420,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":17421,"byte_end":17424,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":17425,"byte_end":17494,"line_start":127,"line_end":127,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[{"value":"! Contains functions for performing XML special characters escaping.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":17728,"byte_end":17798,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20205,"byte_end":20225,"line_start":92,"line_end":92,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside an attribute value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19707,"byte_end":19780,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19781,"byte_end":19784,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19785,"byte_end":19858,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19859,"byte_end":19882,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19883,"byte_end":19886,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19887,"byte_end":19907,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ * `>` → `&gt;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19908,"byte_end":19928,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/ * `\"` → `&quot;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19929,"byte_end":19951,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/ * `'` → `&apos;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19952,"byte_end":19974,"line_start":85,"line_end":85,"column_start":1,"column_end":21}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19975,"byte_end":19996,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19997,"byte_end":20000,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside XML attribute values or in PCDATA sections.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20001,"byte_end":20091,"line_start":88,"line_end":88,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20092,"byte_end":20095,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20096,"byte_end":20187,"line_start":90,"line_end":90,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20188,"byte_end":20197,"line_start":91,"line_end":91,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20725,"byte_end":20742,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside PCDATA.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20301,"byte_end":20362,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20363,"byte_end":20366,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20367,"byte_end":20440,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20441,"byte_end":20464,"line_start":99,"line_end":99,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20465,"byte_end":20468,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20469,"byte_end":20489,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20490,"byte_end":20511,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20512,"byte_end":20515,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside PCDATA sections but NOT inside attribute values.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20516,"byte_end":20611,"line_start":104,"line_end":104,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20612,"byte_end":20615,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20616,"byte_end":20707,"line_start":106,"line_end":106,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":20708,"byte_end":20717,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":979},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":157},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":993},{"krate":0,"index":1005},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":996},{"krate":0,"index":184},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":238}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[{"value":"! Contains namespace manipulation types and functions.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21114,"byte_end":21170,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21547,"byte_end":21562,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[{"value":"/ Designates prefix for namespace definitions.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21355,"byte_end":21403,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21404,"byte_end":21407,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [Namespaces in XML][namespace] spec for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21408,"byte_end":21473,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21474,"byte_end":21477,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/TR/xml-names/#ns-decl","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21478,"byte_end":21536,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21781,"byte_end":21793,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xmlns` prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21589,"byte_end":21640,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21641,"byte_end":21644,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [A Namespace Name for xmlns Attributes][1] for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21645,"byte_end":21717,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21718,"byte_end":21721,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/2000/xmlns/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21722,"byte_end":21770,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22304,"byte_end":22317,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[{"value":"/ Designates prefix for a namespace containing several special predefined attributes.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21847,"byte_end":21934,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21935,"byte_end":21938,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See [2.10 White Space handling][1],  [2.1 Language Identification][2],","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":21939,"byte_end":22013,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ [XML Base specification][3] and [xml:id specification][4] for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22014,"byte_end":22097,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22098,"byte_end":22101,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/   [1]: http://www.w3.org/TR/REC-xml/#sec-white-space","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22102,"byte_end":22158,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/   [2]: http://www.w3.org/TR/REC-xml/#sec-lang-tag","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22159,"byte_end":22212,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/   [3]: http://www.w3.org/TR/xmlbase/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22213,"byte_end":22253,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/   [4]: http://www.w3.org/TR/xml-id/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22254,"byte_end":22293,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22468,"byte_end":22478,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xml` prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22344,"byte_end":22393,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22394,"byte_end":22397,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See `NS_XML_PREFIX` documentation for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22398,"byte_end":22457,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23248,"byte_end":23260,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[{"value":"/ Designates the absence of prefix in a qualified name.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22541,"byte_end":22598,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22599,"byte_end":22602,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This constant should be used to define or query default namespace which should be used","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22603,"byte_end":22693,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ for element or attribute names without prefix. For example, if a namespace mapping","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22694,"byte_end":22780,"line_start":42,"line_end":42,"column_start":1,"column_end":87}},{"value":"/ at a particular point in the document contains correspondence like","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22781,"byte_end":22851,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ ```none","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22852,"byte_end":22863,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/   NS_NO_PREFIX  -->  urn:some:namespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22864,"byte_end":22907,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22908,"byte_end":22915,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ then all names declared without an explicit prefix `urn:some:namespace` is assumed as","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":22916,"byte_end":23005,"line_start":47,"line_end":47,"column_start":1,"column_end":90}},{"value":"/ a namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23006,"byte_end":23026,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23027,"byte_end":23030,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ By default empty prefix corresponds to absence of namespace, but this can change either","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23031,"byte_end":23122,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/ when writing an XML document (manually) or when reading an XML document (based on namespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23123,"byte_end":23218,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ declarations).","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23219,"byte_end":23237,"line_start":52,"line_end":52,"column_start":1,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23698,"byte_end":23710,"line_start":61,"line_end":61,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[{"value":"/ Designates an empty namespace URI, which is equivalent to absence of namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23285,"byte_end":23368,"line_start":55,"line_end":55,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23369,"byte_end":23372,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This constant should not usually be used directly; it is used to designate that","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23373,"byte_end":23456,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ empty prefix corresponds to absent namespace in `NamespaceStack` instances created with","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23457,"byte_end":23548,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ `NamespaceStack::default()`. Therefore, it can be used to restore `NS_NO_PREFIX` mapping","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23549,"byte_end":23641,"line_start":59,"line_end":59,"column_start":1,"column_end":93}},{"value":"/ in a namespace back to its default value.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23642,"byte_end":23687,"line_start":60,"line_end":60,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23926,"byte_end":23935,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[{"value":"/ Namespace is a map from prefixes to namespace URIs.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23735,"byte_end":23790,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23791,"byte_end":23794,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ No prefix (i.e. default namespace) is designated by `NS_NO_PREFIX` constant.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23795,"byte_end":23875,"line_start":65,"line_end":65,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24046,"byte_end":24051,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"fn () -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23989,"byte_end":24020,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24025,"byte_end":24034,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24172,"byte_end":24180,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is empty.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24103,"byte_end":24146,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24151,"byte_end":24160,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24370,"byte_end":24390,"line_start":82,"line_end":82,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is essentially empty, that is, it does not contain","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24235,"byte_end":24319,"line_start":80,"line_end":80,"column_start":5,"column_end":89}},{"value":"/ anything but default mappings.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24324,"byte_end":24358,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25058,"byte_end":25066,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"fn <P> (&self, prefix: &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"/ Checks whether this namespace mapping contains the given prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24783,"byte_end":24851,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24856,"byte_end":24859,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24864,"byte_end":24880,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/ * `prefix`  --- namespace prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24885,"byte_end":24922,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24927,"byte_end":24930,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24935,"byte_end":24953,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ `true` if this namespace contains the given prefix, `false` otherwise.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":24958,"byte_end":25032,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25037,"byte_end":25046,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25680,"byte_end":25683,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25174,"byte_end":25213,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25218,"byte_end":25221,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method does not override any already existing mappings.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25226,"byte_end":25290,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25295,"byte_end":25298,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the map already contained","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25303,"byte_end":25374,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ the given prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25379,"byte_end":25400,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25405,"byte_end":25408,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25413,"byte_end":25429,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25434,"byte_end":25470,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25475,"byte_end":25508,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25513,"byte_end":25516,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25521,"byte_end":25539,"line_start":117,"line_end":117,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25544,"byte_end":25622,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25627,"byte_end":25668,"line_start":119,"line_end":119,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26531,"byte_end":26540,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace forcefully.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":25996,"byte_end":26046,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26051,"byte_end":26054,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method, unlike `put()`, does replace an already existing mapping.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26059,"byte_end":26133,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26138,"byte_end":26141,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Returns previous URI which was assigned to the given prefix, if it is present.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26146,"byte_end":26228,"line_start":136,"line_end":136,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26233,"byte_end":26236,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26241,"byte_end":26257,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26262,"byte_end":26298,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26303,"byte_end":26336,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26341,"byte_end":26344,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26349,"byte_end":26367,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ `Some(uri)` with `uri` being a previous URI assigned to the `prefix`, or","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26372,"byte_end":26448,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ `None` if such prefix was not present in the namespace before.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26453,"byte_end":26519,"line_start":144,"line_end":144,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26943,"byte_end":26946,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[{"value":"/ Queries the namespace for the given prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26708,"byte_end":26755,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26760,"byte_end":26763,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26768,"byte_end":26784,"line_start":153,"line_end":153,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26789,"byte_end":26825,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26830,"byte_end":26833,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26838,"byte_end":26856,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ Namespace URI corresponding to the given prefix, if it is present.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":26861,"byte_end":26931,"line_start":157,"line_end":157,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27164,"byte_end":27181,"line_start":164,"line_end":164,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries<'a, String, String>,\n    for<'b>fn((&'b String, &'b String)) -> UriMapping<'b>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[{"value":"/ An alias for iterator type for namespace mappings contained in a namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27075,"byte_end":27154,"line_start":163,"line_end":163,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27841,"byte_end":27855,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[{"value":"/ Namespace stack is a sequence of namespaces.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27616,"byte_end":27664,"line_start":181,"line_end":181,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27665,"byte_end":27668,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Namespace stack is used to represent cumulative namespace consisting of","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27669,"byte_end":27744,"line_start":183,"line_end":183,"column_start":1,"column_end":76}},{"value":"/ combined namespaces from nested elements.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27745,"byte_end":27790,"line_start":184,"line_end":184,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27967,"byte_end":27972,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27904,"byte_end":27941,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27946,"byte_end":27955,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28293,"byte_end":28300,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"/ Returns a namespace stack with default items in it.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28040,"byte_end":28095,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28100,"byte_end":28103,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Default items are the following:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28108,"byte_end":28144,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28149,"byte_end":28152,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ * `xml` → `http://www.w3.org/XML/1998/namespace`;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28157,"byte_end":28212,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/ * `xmlns` → `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28217,"byte_end":28267,"line_start":198,"line_end":198,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28272,"byte_end":28281,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28714,"byte_end":28724,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"fn (&mut self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"/ Adds an empty namespace to the top of this stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28635,"byte_end":28688,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28693,"byte_end":28702,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28946,"byte_end":28949,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"fn (&mut self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28826,"byte_end":28874,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28879,"byte_end":28882,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28887,"byte_end":28920,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":28925,"byte_end":28934,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29182,"byte_end":29189,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"fn (&mut self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29017,"byte_end":29065,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29070,"byte_end":29073,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(namespace)` if this stack is not empty and `None` otherwise.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29078,"byte_end":29156,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29161,"byte_end":29170,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29396,"byte_end":29404,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"fn (&mut self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace mutably, leaving the stack intact.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29256,"byte_end":29324,"line_start":235,"line_end":235,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29329,"byte_end":29332,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29337,"byte_end":29370,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29375,"byte_end":29384,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29624,"byte_end":29628,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"fn (&self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace immutably, leaving the stack intact.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29482,"byte_end":29552,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29557,"byte_end":29560,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29565,"byte_end":29598,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29603,"byte_end":29612,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30348,"byte_end":30359,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace if this stack does not already contain one.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29694,"byte_end":29783,"line_start":251,"line_end":251,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29788,"byte_end":29791,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29796,"byte_end":29883,"line_start":253,"line_end":253,"column_start":5,"column_end":92}},{"value":"/ Note that both key and value are matched and the mapping is inserted if either","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29888,"byte_end":29970,"line_start":254,"line_end":254,"column_start":5,"column_end":87}},{"value":"/ namespace prefix is not already mapped, or if it is mapped, but to a different URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":29975,"byte_end":30062,"line_start":255,"line_end":255,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30067,"byte_end":30070,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30075,"byte_end":30091,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30096,"byte_end":30132,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30137,"byte_end":30170,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30175,"byte_end":30178,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30183,"byte_end":30201,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30206,"byte_end":30284,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30289,"byte_end":30336,"line_start":263,"line_end":263,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31392,"byte_end":31395,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30680,"byte_end":30740,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30745,"byte_end":30748,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This method does not override a mapping in the topmost namespace if it is","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30753,"byte_end":30830,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/ already present, however, it does not depend on other namespaces in the stack,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30835,"byte_end":30917,"line_start":279,"line_end":279,"column_start":5,"column_end":87}},{"value":"/ so it is possible to put a mapping which is present in lower namespaces.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":30922,"byte_end":30998,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31003,"byte_end":31006,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31011,"byte_end":31098,"line_start":282,"line_end":282,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31103,"byte_end":31106,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31111,"byte_end":31127,"line_start":284,"line_end":284,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31132,"byte_end":31168,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31173,"byte_end":31206,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31211,"byte_end":31214,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31219,"byte_end":31237,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31242,"byte_end":31320,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31325,"byte_end":31366,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31371,"byte_end":31380,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31916,"byte_end":31919,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"/ Performs a search for the given prefix in the whole stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31556,"byte_end":31618,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31623,"byte_end":31626,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This method walks the stack from top to bottom, querying each namespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31631,"byte_end":31706,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ in order for the given prefix. If none of the namespaces contains the prefix,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31711,"byte_end":31792,"line_start":301,"line_end":301,"column_start":5,"column_end":86}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31797,"byte_end":31820,"line_start":302,"line_end":302,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31825,"byte_end":31828,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31833,"byte_end":31849,"line_start":304,"line_end":304,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31854,"byte_end":31890,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":31895,"byte_end":31904,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32427,"byte_end":32433,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"fn (&self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[{"value":"/ Combines this stack of namespaces into a single namespace.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32209,"byte_end":32271,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32276,"byte_end":32279,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Namespaces are combined in left-to-right order, that is, rightmost namespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32284,"byte_end":32364,"line_start":320,"line_end":320,"column_start":5,"column_end":85}},{"value":"/ elements take priority over leftmost ones.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32369,"byte_end":32415,"line_start":321,"line_end":321,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32829,"byte_end":32843,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"fn (&mut self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"/ Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32656,"byte_end":32745,"line_start":330,"line_end":330,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32750,"byte_end":32753,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ See `CheckedTarget` for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32758,"byte_end":32803,"line_start":332,"line_end":332,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32808,"byte_end":32817,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33005,"byte_end":33009,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"fn (&self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all mappings in this namespace stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32913,"byte_end":32979,"line_start":338,"line_end":338,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":32984,"byte_end":32993,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33514,"byte_end":33536,"line_start":359,"line_end":359,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[{"value":"/ An iterator over mappings from prefixes to URIs in a namespace stack.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33079,"byte_end":33152,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33153,"byte_end":33156,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33157,"byte_end":33170,"line_start":347,"line_end":347,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33171,"byte_end":33178,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33179,"byte_end":33220,"line_start":349,"line_end":349,"column_start":1,"column_end":42}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33221,"byte_end":33263,"line_start":350,"line_end":350,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33264,"byte_end":33285,"line_start":351,"line_end":351,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33286,"byte_end":33312,"line_start":352,"line_end":352,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33313,"byte_end":33339,"line_start":353,"line_end":353,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33340,"byte_end":33361,"line_start":354,"line_end":354,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33362,"byte_end":33388,"line_start":355,"line_end":355,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33389,"byte_end":33392,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![(\"c\", \"urn:C\"), (\"a\", \"urn:A\"), (\"b\", \"urn:B\")], nst.iter().collect::<Vec<_>>());","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33393,"byte_end":33494,"line_start":357,"line_end":357,"column_start":1,"column_end":102}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33495,"byte_end":33502,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35505,"byte_end":35515,"line_start":419,"line_end":419,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[{"value":"/ A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35409,"byte_end":35495,"line_start":418,"line_end":418,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37090,"byte_end":37103,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[{"value":"/ A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36004,"byte_end":36090,"line_start":437,"line_end":437,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36091,"byte_end":36094,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36095,"byte_end":36108,"line_start":439,"line_end":439,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36109,"byte_end":36112,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36113,"byte_end":36120,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36121,"byte_end":36162,"line_start":442,"line_end":442,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36163,"byte_end":36166,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36167,"byte_end":36209,"line_start":444,"line_end":444,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36210,"byte_end":36231,"line_start":445,"line_end":445,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36232,"byte_end":36258,"line_start":446,"line_end":446,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36259,"byte_end":36285,"line_start":447,"line_end":447,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36286,"byte_end":36307,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36308,"byte_end":36334,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36335,"byte_end":36338,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ nst.checked_target().extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36339,"byte_end":36441,"line_start":451,"line_end":451,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36442,"byte_end":36457,"line_start":452,"line_end":452,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\"), (\"b\", \"urn:B\")],","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36458,"byte_end":36535,"line_start":453,"line_end":453,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36536,"byte_end":36574,"line_start":454,"line_end":454,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36575,"byte_end":36581,"line_start":455,"line_end":455,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36582,"byte_end":36589,"line_start":456,"line_end":456,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36590,"byte_end":36593,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Compare:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36594,"byte_end":36606,"line_start":458,"line_end":458,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36607,"byte_end":36610,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36611,"byte_end":36618,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36619,"byte_end":36660,"line_start":461,"line_end":461,"column_start":1,"column_end":42}},{"value":"/ # let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36661,"byte_end":36705,"line_start":462,"line_end":462,"column_start":1,"column_end":45}},{"value":"/ # nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36706,"byte_end":36729,"line_start":463,"line_end":463,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36730,"byte_end":36758,"line_start":464,"line_end":464,"column_start":1,"column_end":29}},{"value":"/ # nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36759,"byte_end":36787,"line_start":465,"line_end":465,"column_start":1,"column_end":29}},{"value":"/ # nst.push_empty();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36788,"byte_end":36811,"line_start":466,"line_end":466,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36812,"byte_end":36840,"line_start":467,"line_end":467,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36841,"byte_end":36844,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ nst.extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36845,"byte_end":36930,"line_start":469,"line_end":469,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36931,"byte_end":36946,"line_start":470,"line_end":470,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\")],","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":36947,"byte_end":37024,"line_start":471,"line_end":471,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37025,"byte_end":37063,"line_start":472,"line_end":472,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37064,"byte_end":37070,"line_start":473,"line_end":473,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37071,"byte_end":37078,"line_start":474,"line_end":474,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":351},{"krate":0,"index":553},{"krate":0,"index":562},{"krate":0,"index":576},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":650}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[{"value":"! Contains high-level interface for a pull-based XML parser.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37384,"byte_end":37446,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37447,"byte_end":37450,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The most important type in this module is `EventReader`, which provides an iterator","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37451,"byte_end":37538,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! view for events in XML document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37539,"byte_end":37575,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120198,"byte_end":120210,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[{"value":"/ Parser configuration structure.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120009,"byte_end":120044,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120045,"byte_end":120048,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This structure contains various configuration options which affect","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120049,"byte_end":120119,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ behavior of the parser.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120120,"byte_end":120147,"line_start":9,"line_end":9,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120913,"byte_end":120928,"line_start":23,"line_end":23,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace in textual events be removed. Default is false.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120217,"byte_end":120301,"line_start":12,"line_end":12,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120306,"byte_end":120309,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ When true, all standalone whitespace will be removed (this means no","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120314,"byte_end":120385,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"/ `Whitespace` events will ve emitted), and leading and trailing whitespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120390,"byte_end":120467,"line_start":15,"line_end":15,"column_start":5,"column_end":82}},{"value":"/ from `Character` events will be deleted. If after trimming `Characters`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120472,"byte_end":120547,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/ event will be empty, it will also be omitted from output stream. This is","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120552,"byte_end":120628,"line_start":17,"line_end":17,"column_start":5,"column_end":81}},{"value":"/ possible, however, only if `whitespace_to_characters` or","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120633,"byte_end":120693,"line_start":18,"line_end":18,"column_start":5,"column_end":65}},{"value":"/ `cdata_to_characters` options are set.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120698,"byte_end":120740,"line_start":19,"line_end":19,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120745,"byte_end":120748,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This option does not affect CDATA events, unless `cdata_to_characters`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120753,"byte_end":120827,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ option is also set. In that case CDATA content will also be trimmed.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120832,"byte_end":120904,"line_start":22,"line_end":22,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121278,"byte_end":121302,"line_start":31,"line_end":31,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace be converted to characters.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":120941,"byte_end":121005,"line_start":25,"line_end":25,"column_start":5,"column_end":69}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121010,"byte_end":121031,"line_start":26,"line_end":26,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121036,"byte_end":121039,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `Whitespace` events `Characters` events with the","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121044,"byte_end":121116,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ same content will be emitted. If `trim_whitespace` is also true, these","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121121,"byte_end":121195,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ events will be trimmed to nothing and, consequently, not emitted.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121200,"byte_end":121269,"line_start":30,"line_end":30,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121709,"byte_end":121728,"line_start":40,"line_end":40,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should CDATA be converted to characters.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121315,"byte_end":121374,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121379,"byte_end":121400,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121405,"byte_end":121408,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `CData` events `Characters` events with the same","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121413,"byte_end":121485,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ content will be emitted. If `trim_whitespace` is also true, these events","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121490,"byte_end":121566,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ will be trimmed. If corresponding CDATA contained nothing but whitespace,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121571,"byte_end":121648,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ this event will be omitted from the stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121653,"byte_end":121700,"line_start":39,"line_end":39,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121883,"byte_end":121898,"line_start":45,"line_end":45,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should comments be omitted. Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121741,"byte_end":121804,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121809,"byte_end":121812,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If true, `Comment` events will not be emitted at all.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121817,"byte_end":121874,"line_start":44,"line_end":44,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122384,"byte_end":122403,"line_start":56,"line_end":56,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should sequential `Characters` events be merged.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121911,"byte_end":121978,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":121983,"byte_end":122003,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122008,"byte_end":122011,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If true, multiple sequential `Characters` events will be merged into","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122016,"byte_end":122088,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ a single event, that is, their data will be concatenated.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122093,"byte_end":122154,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122159,"byte_end":122162,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Multiple sequential `Characters` events are only possible if either","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122167,"byte_end":122238,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ `cdata_to_characters` or `ignore_comments` are set. Otherwise character","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122243,"byte_end":122318,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ events will always be separated by other events.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122323,"byte_end":122375,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122802,"byte_end":122805,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"fn () -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[{"value":"/ Returns a new config with default values.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122437,"byte_end":122482,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122487,"byte_end":122490,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ You can tweak default values using builder-like pattern:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122495,"byte_end":122555,"line_start":62,"line_end":62,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122560,"byte_end":122563,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122568,"byte_end":122579,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122584,"byte_end":122618,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122623,"byte_end":122626,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let config = ParserConfig::new()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122631,"byte_end":122667,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122672,"byte_end":122702,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122707,"byte_end":122737,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122742,"byte_end":122778,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122783,"byte_end":122790,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123698,"byte_end":123711,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"fn <R> (self, source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML reader with this configuration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123064,"byte_end":123114,"line_start":82,"line_end":82,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123119,"byte_end":123122,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a reader at the same time:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123127,"byte_end":123215,"line_start":84,"line_end":84,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123220,"byte_end":123223,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123228,"byte_end":123239,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123244,"byte_end":123278,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123283,"byte_end":123286,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut source: &[u8] = b\"...\";","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123291,"byte_end":123326,"line_start":89,"line_end":89,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123331,"byte_end":123334,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let reader = ParserConfig::new()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123339,"byte_end":123375,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123380,"byte_end":123410,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123415,"byte_end":123445,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123450,"byte_end":123485,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/     .create_reader(&mut source);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123490,"byte_end":123526,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123531,"byte_end":123538,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123543,"byte_end":123546,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventReader::new_with_config()` with","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123551,"byte_end":123637,"line_start":98,"line_end":98,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123642,"byte_end":123672,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123677,"byte_end":123686,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123969,"byte_end":123984,"line_start":114,"line_end":114,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":124000,"byte_end":124024,"line_start":115,"line_end":115,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":124040,"byte_end":124059,"line_start":116,"line_end":116,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":124075,"byte_end":124090,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":124106,"byte_end":124125,"line_start":118,"line_end":118,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"StructVariant","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124781,"byte_end":124794,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124578,"byte_end":124622,"line_start":17,"line_end":17,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124627,"byte_end":124630,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted before any other event. It is emitted","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124635,"byte_end":124705,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ even if the actual declaration is not present in the document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124710,"byte_end":124776,"line_start":20,"line_end":20,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125752,"byte_end":125763,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[{"value":"/ Denotes to the end of the document stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125513,"byte_end":125559,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125564,"byte_end":125567,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted after any other event (except `Error`). After it","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125572,"byte_end":125653,"line_start":44,"line_end":44,"column_start":5,"column_end":86}},{"value":"/ is emitted for the first time, it will always be emitted on next event pull attempts.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125658,"byte_end":125747,"line_start":45,"line_end":45,"column_start":5,"column_end":94}}]},{"kind":"StructVariant","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125966,"byte_end":125987,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125770,"byte_end":125812,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125817,"byte_end":125820,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This event contains a processing instruction target (`name`) and opaque `data`. It","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125825,"byte_end":125911,"line_start":50,"line_end":50,"column_start":5,"column_end":91}},{"value":"/ is up to the application to process them.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":125916,"byte_end":125961,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126352,"byte_end":126364,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126141,"byte_end":126183,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126188,"byte_end":126191,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing opening tags or after parsing bodiless tags. In the","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126196,"byte_end":126287,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ latter case `EndElement` event immediately follows.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126292,"byte_end":126347,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126976,"byte_end":126986,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126742,"byte_end":126779,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126784,"byte_end":126787,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing closing tags or after parsing bodiless tags. In the","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126792,"byte_end":126883,"line_start":79,"line_end":79,"column_start":5,"column_end":96}},{"value":"/ latter case it is emitted immediately after corresponding `StartElement` event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":126888,"byte_end":126971,"line_start":80,"line_end":80,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127355,"byte_end":127360,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127068,"byte_end":127094,"line_start":86,"line_end":86,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127099,"byte_end":127102,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data. No unescaping will be performed.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127107,"byte_end":127178,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127183,"byte_end":127186,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `CData`. See","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127191,"byte_end":127282,"line_start":90,"line_end":90,"column_start":5,"column_end":96}},{"value":"/ `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127287,"byte_end":127350,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127584,"byte_end":127591,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127375,"byte_end":127397,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127402,"byte_end":127405,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to ignore comments, so this event will never be emitted.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127410,"byte_end":127507,"line_start":96,"line_end":96,"column_start":5,"column_end":102}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127512,"byte_end":127579,"line_start":97,"line_end":97,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127977,"byte_end":127987,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127606,"byte_end":127649,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127654,"byte_end":127657,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will always be unescaped, so no entities like `&lt;` or `&amp;` or `&#123;`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127662,"byte_end":127764,"line_start":102,"line_end":102,"column_start":5,"column_end":107}},{"value":"/ will appear in it.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127769,"byte_end":127791,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127796,"byte_end":127799,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to trim leading and trailing whitespace for this event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127804,"byte_end":127900,"line_start":105,"line_end":105,"column_start":5,"column_end":101}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":127905,"byte_end":127972,"line_start":106,"line_end":106,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128356,"byte_end":128366,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[{"value":"/ Denotes a chunk of whitespace outside of tags.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128002,"byte_end":128052,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128057,"byte_end":128060,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `Whitespace`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128065,"byte_end":128157,"line_start":111,"line_end":111,"column_start":5,"column_end":97}},{"value":"/ See `pull::ParserConfiguration` structure for more information. When combined with whitespace","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128162,"byte_end":128259,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ trimming, it will eliminate standalone whitespace from the event stream completely.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128264,"byte_end":128351,"line_start":113,"line_end":113,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124563,"byte_end":124571,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"XmlEvent::{StartDocument, EndDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters, Whitespace}","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[{"value":"/ An element of an XML input stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124360,"byte_end":124398,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124399,"byte_end":124402,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Items of this enum are emitted by `reader::EventReader`. They correspond to different","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124403,"byte_end":124492,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ elements of an XML document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":124493,"byte_end":124525,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131470,"byte_end":131485,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"fn <'a> (&'a self) -> Option<::writer::events::XmlEvent<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[{"value":"/ Obtains a writer event from this reader event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130045,"byte_end":130095,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130100,"byte_end":130103,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method is useful for streaming processing of XML documents where the output","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130108,"byte_end":130192,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ is also an XML document. With this method it is possible to process some events","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130197,"byte_end":130280,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/ while passing other events through to the writer unchanged:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130285,"byte_end":130348,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130353,"byte_end":130356,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130361,"byte_end":130372,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ use std::str;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130377,"byte_end":130394,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130399,"byte_end":130402,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ use xml::{EventReader, EventWriter};","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130407,"byte_end":130447,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/ use xml::reader::XmlEvent as ReaderEvent;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130452,"byte_end":130497,"line_start":163,"line_end":163,"column_start":5,"column_end":50}},{"value":"/ use xml::writer::XmlEvent as WriterEvent;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130502,"byte_end":130547,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130552,"byte_end":130555,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut input: &[u8] = b\"<hello>world</hello>\";","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130560,"byte_end":130611,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/ let mut output: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130616,"byte_end":130657,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130662,"byte_end":130665,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130670,"byte_end":130675,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/     let mut reader = EventReader::new(&mut input);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130680,"byte_end":130734,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/     let mut writer = EventWriter::new(&mut output);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130739,"byte_end":130794,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130799,"byte_end":130802,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     for e in reader {","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130807,"byte_end":130832,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/         match e.unwrap() {","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130837,"byte_end":130867,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/             ReaderEvent::Characters(s) =>","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130872,"byte_end":130917,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/                 writer.write(WriterEvent::characters(&s.to_uppercase())).unwrap(),","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130922,"byte_end":131008,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"/             e => if let Some(e) = e.as_writer_event() {","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131013,"byte_end":131072,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/                 writer.write(e).unwrap()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131077,"byte_end":131121,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131126,"byte_end":131143,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131148,"byte_end":131161,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131166,"byte_end":131175,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131180,"byte_end":131185,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131190,"byte_end":131193,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131198,"byte_end":131213,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     str::from_utf8(&output).unwrap(),","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131218,"byte_end":131259,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/     r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>WORLD</hello>\"#","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131264,"byte_end":131335,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131340,"byte_end":131346,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131351,"byte_end":131358,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131363,"byte_end":131366,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this API may change or get additions in future to improve its ergonomics.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":131371,"byte_end":131458,"line_start":190,"line_end":190,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133180,"byte_end":133186,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow<'static, str>)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133211,"byte_end":133213,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133230,"byte_end":133234,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133256,"byte_end":133269,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133164,"byte_end":133173,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"ErrorKind::{Syntax, Io, Utf8, UnexpectedEof}","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133442,"byte_end":133447,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[{"value":"/ An XML parsing error.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133274,"byte_end":133299,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133300,"byte_end":133303,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Consists of a 2D position in a document and a textual message describing the error.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133304,"byte_end":133391,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133856,"byte_end":133859,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a message which is contained inside this error.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133756,"byte_end":133830,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133835,"byte_end":133844,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134176,"byte_end":134180,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37907,"byte_end":37913,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlReader`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37856,"byte_end":37897,"line_start":24,"line_end":24,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38045,"byte_end":38056,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":37946,"byte_end":38033,"line_start":27,"line_end":27,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38223,"byte_end":38226,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"fn (source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader, consuming the given stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38144,"byte_end":38197,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38202,"byte_end":38211,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38445,"byte_end":38460,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"fn (source: R, config: ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader with the provded configuration, consuming the given stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38335,"byte_end":38419,"line_start":40,"line_end":40,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38424,"byte_end":38433,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38831,"byte_end":38835,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"fn (&mut self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"/ Pulls and returns next XML event from the stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38597,"byte_end":38650,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38655,"byte_end":38658,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If returned event is `XmlEvent::Error` or `XmlEvent::EndDocument`, then","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38663,"byte_end":38738,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ further calls to this method will return this event again.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38743,"byte_end":38805,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38810,"byte_end":38819,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38930,"byte_end":38936,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38978,"byte_end":38988,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39346,"byte_end":39356,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `EventReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39036,"byte_end":39100,"line_start":58,"line_end":58,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39105,"byte_end":39108,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this operation is destructive; unwrapping the reader and wrapping it","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39113,"byte_end":39195,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/ again with `EventReader::new()` will create a fresh reader which will attempt","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39200,"byte_end":39281,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/ to parse an XML document from the beginning.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39286,"byte_end":39334,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40078,"byte_end":40084,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[{"value":"/ An iterator over XML events created from some type implementing `Read`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39819,"byte_end":39894,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39895,"byte_end":39898,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ When the next event is `xml::event::Error` or `xml::event::EndDocument`, then","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39899,"byte_end":39980,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/ it will be returned by the iterator once, and then it will stop producing events.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39981,"byte_end":40066,"line_start":88,"line_end":88,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40265,"byte_end":40275,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"fn (self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"/ Unwraps the iterator, returning the internal `EventReader`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40176,"byte_end":40239,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40244,"byte_end":40253,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40872,"byte_end":40880,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"fn (source: &'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"/ A convenience method to create an `XmlReader` from a string slice.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40776,"byte_end":40846,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40851,"byte_end":40860,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":752},{"krate":0,"index":762},{"krate":0,"index":833},{"krate":0,"index":837}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[{"value":"! Contains high-level interface for an events-based XML emitter.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136184,"byte_end":136250,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136251,"byte_end":136254,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The most important type in this module is `EventWriter` which allows writing an XML document","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136255,"byte_end":136351,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! to some output stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136352,"byte_end":136378,"line_start":4,"line_end":4,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140103,"byte_end":140105,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[{"value":"/ An I/O error occured in the underlying `Write` instance.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140038,"byte_end":140098,"line_start":20,"line_end":20,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140199,"byte_end":140226,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[{"value":"/ Document declaration has already been written to the output stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140123,"byte_end":140194,"line_start":23,"line_end":23,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140296,"byte_end":140323,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not available.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140233,"byte_end":140291,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140441,"byte_end":140487,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not equal to the name of the provided","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140330,"byte_end":140411,"line_start":29,"line_end":29,"column_start":5,"column_end":86}},{"value":"/ closing element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140416,"byte_end":140436,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140632,"byte_end":140660,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[{"value":"/ End element name is not specified when it is needed, for example, when automatic","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140494,"byte_end":140578,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/ closing is not enabled in configuration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140583,"byte_end":140627,"line_start":34,"line_end":34,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140019,"byte_end":140031,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"EmitterError::{Io, DocumentStartAlreadyEmitted, LastElementNameNotAvailable, EndElementNameIsNotEqualToLastStartElementName, EndElementNameIsNotSpecified}","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[{"value":"/ An error which may be returned by `XmlWriter` when writing XML events.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":139918,"byte_end":139992,"line_start":17,"line_end":17,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":141907,"byte_end":141913,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlWriter`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":141856,"byte_end":141897,"line_start":75,"line_end":75,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154401,"byte_end":154414,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments }","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[{"value":"/ Emitter configuration structure.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154221,"byte_end":154257,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154258,"byte_end":154261,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure contains various options which control XML document emitter behavior.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154262,"byte_end":154350,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154511,"byte_end":154525,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[{"value":"/ Line separator used to separate lines in formatted output. Default is `\"\\n\"`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154421,"byte_end":154502,"line_start":13,"line_end":13,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154666,"byte_end":154679,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[{"value":"/ A string which will be used for a single level of indentation. Default is `\"  \"`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154551,"byte_end":154635,"line_start":16,"line_end":16,"column_start":5,"column_end":89}},{"value":"/ (two spaces).","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154640,"byte_end":154657,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155277,"byte_end":155291,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not the emitted document should be indented. Default is false.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154705,"byte_end":154782,"line_start":20,"line_end":20,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154787,"byte_end":154790,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The emitter is capable to perform automatic indentation of the emitted XML document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154795,"byte_end":154883,"line_start":22,"line_end":22,"column_start":5,"column_end":93}},{"value":"/ It is done in stream-like fashion and does not require the knowledge of the whole","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154888,"byte_end":154973,"line_start":23,"line_end":23,"column_start":5,"column_end":90}},{"value":"/ document in advance.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":154978,"byte_end":155002,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155007,"byte_end":155010,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Sometimes, however, automatic indentation is undesirable, e.g. when you want to keep","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155015,"byte_end":155103,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ existing layout when processing an existing XML document. Also the indentiation algorithm","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155108,"byte_end":155201,"line_start":27,"line_end":27,"column_start":5,"column_end":98}},{"value":"/ is not thoroughly tested. Hence by default it is disabled.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155206,"byte_end":155268,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155880,"byte_end":155896,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not characters in output events will be escaped. Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155304,"byte_end":155384,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155389,"byte_end":155392,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The emitter can automatically escape characters which can't appear in PCDATA sections","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155397,"byte_end":155486,"line_start":33,"line_end":33,"column_start":5,"column_end":94}},{"value":"/ or element attributes of an XML document, like `<` or `\"` (in attributes). This may","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155491,"byte_end":155578,"line_start":34,"line_end":34,"column_start":5,"column_end":92}},{"value":"/ introduce some overhead because then every corresponding piece of character data","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155583,"byte_end":155667,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ should be scanned for invalid characters.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155672,"byte_end":155717,"line_start":36,"line_end":36,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155722,"byte_end":155725,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If this option is disabled, the XML writer may produce non-well-formed documents, so","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155730,"byte_end":155818,"line_start":38,"line_end":38,"column_start":5,"column_end":93}},{"value":"/ use `false` value for this option with care.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155823,"byte_end":155871,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156216,"byte_end":156242,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to write XML document declaration at the beginning of a document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155909,"byte_end":155993,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":155998,"byte_end":156018,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156023,"byte_end":156026,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This option controls whether the document declaration should be emitted automatically","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156031,"byte_end":156120,"line_start":45,"line_end":45,"column_start":5,"column_end":94}},{"value":"/ before a root element is written if it was not emitted explicitly by the user.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156125,"byte_end":156207,"line_start":46,"line_end":46,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156497,"byte_end":156521,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to convert elements with empty content to empty elements. Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156255,"byte_end":156348,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156353,"byte_end":156356,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This option allows turning elements like `<a></a>` (an element with empty content)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156361,"byte_end":156447,"line_start":51,"line_end":51,"column_start":5,"column_end":91}},{"value":"/ into `<a />` (an empty element).","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156452,"byte_end":156488,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156897,"byte_end":156916,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not to emit CDATA events as plain characters. Default is false.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156534,"byte_end":156612,"line_start":55,"line_end":55,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156617,"byte_end":156620,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option forces the emitter to convert CDATA events into regular character events,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156625,"byte_end":156714,"line_start":57,"line_end":57,"column_start":5,"column_end":94}},{"value":"/ performing all the necessary escaping beforehand. This may be occasionally useful","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156719,"byte_end":156804,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/ for feeding the document into incorrect parsers which do not support CDATA.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156809,"byte_end":156888,"line_start":59,"line_end":59,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157253,"byte_end":157277,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to keep element names to support `EndElement` events without explicit names.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":156929,"byte_end":157024,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157029,"byte_end":157049,"line_start":63,"line_end":63,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157054,"byte_end":157057,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This option makes the emitter to keep names of written elements in order to allow","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157062,"byte_end":157147,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ omitting names when writing closing element tags. This could incur some memory overhead.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157152,"byte_end":157244,"line_start":66,"line_end":66,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157654,"byte_end":157670,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to automatically insert leading and trailing spaces in emitted comments,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157290,"byte_end":157381,"line_start":69,"line_end":69,"column_start":5,"column_end":96}},{"value":"/ if necessary. Default is true.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157386,"byte_end":157420,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157425,"byte_end":157428,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is a convenience option in order for the user not to append spaces before and after","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157433,"byte_end":157525,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ comments text in order to get more pretty comments: `<!-- something -->` instead of","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157530,"byte_end":157617,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ `<!--something-->`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157622,"byte_end":157645,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158104,"byte_end":158107,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"fn () -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"/ Creates an emitter configuration with default values.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157706,"byte_end":157763,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157768,"byte_end":157771,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ You can tweak default options with builder-like pattern:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157776,"byte_end":157836,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157841,"byte_end":157844,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157849,"byte_end":157860,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157865,"byte_end":157900,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157905,"byte_end":157908,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let config = EmitterConfig::new()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157913,"byte_end":157950,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157955,"byte_end":157986,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157991,"byte_end":158020,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158025,"byte_end":158066,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158071,"byte_end":158078,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158083,"byte_end":158092,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159197,"byte_end":159210,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"fn <W> (self, sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML writer with this configuration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158550,"byte_end":158600,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158605,"byte_end":158608,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a writer at the same time:","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158613,"byte_end":158701,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158706,"byte_end":158709,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158714,"byte_end":158725,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158730,"byte_end":158765,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158770,"byte_end":158773,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut target: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158778,"byte_end":158819,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158824,"byte_end":158827,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let writer = EmitterConfig::new()","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158832,"byte_end":158869,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158874,"byte_end":158905,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158910,"byte_end":158939,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false)","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158944,"byte_end":158984,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/     .create_writer(&mut target);","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":158989,"byte_end":159025,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159030,"byte_end":159037,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159042,"byte_end":159045,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventWriter::new_with_config()` with","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159050,"byte_end":159136,"line_start":122,"line_end":122,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159141,"byte_end":159171,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159176,"byte_end":159185,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159467,"byte_end":159481,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":661,"byte_end":736,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159511,"byte_end":159524,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":661,"byte_end":736,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159554,"byte_end":159568,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159584,"byte_end":159610,"line_start":141,"line_end":141,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159626,"byte_end":159650,"line_start":142,"line_end":142,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159666,"byte_end":159685,"line_start":143,"line_end":143,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159701,"byte_end":159725,"line_start":144,"line_end":144,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159741,"byte_end":159757,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":794},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":821},{"krate":0,"index":830}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[{"value":"! Contains `XmlEvent` datatype, instances of which are consumed by the writer.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":159772,"byte_end":159852,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"StructVariant","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160477,"byte_end":160490,"line_start":20,"line_end":20,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160169,"byte_end":160213,"line_start":15,"line_end":15,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160218,"byte_end":160221,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This event should always be written before any other event. If it is not written","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160226,"byte_end":160310,"line_start":17,"line_end":17,"column_start":5,"column_end":89}},{"value":"/ at all, a default XML declaration will be outputted if the corresponding option","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160315,"byte_end":160398,"line_start":18,"line_end":18,"column_start":5,"column_end":88}},{"value":"/ is set in the configuration. Otherwise an error will be returned.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160403,"byte_end":160472,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160909,"byte_end":160930,"line_start":38,"line_end":38,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160862,"byte_end":160904,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":161133,"byte_end":161145,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":161086,"byte_end":161128,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":161984,"byte_end":161994,"line_start":67,"line_end":67,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":161942,"byte_end":161979,"line_start":66,"line_end":66,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162480,"byte_end":162485,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162318,"byte_end":162344,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162349,"byte_end":162352,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data, and no escaping will be performed when writing it","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162357,"byte_end":162445,"line_start":78,"line_end":78,"column_start":5,"column_end":93}},{"value":"/ to the output stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162450,"byte_end":162475,"line_start":79,"line_end":79,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162651,"byte_end":162658,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162501,"byte_end":162523,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162528,"byte_end":162531,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The string will be checked for invalid sequences and error will be returned by the","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162536,"byte_end":162622,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ write operation","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162627,"byte_end":162646,"line_start":85,"line_end":85,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162905,"byte_end":162915,"line_start":92,"line_end":92,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162674,"byte_end":162717,"line_start":88,"line_end":88,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162722,"byte_end":162725,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will be escaped if `perform_escaping` option is enabled,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162730,"byte_end":162813,"line_start":90,"line_end":90,"column_start":5,"column_end":88}},{"value":"/ that is, every character invalid for PCDATA will appear as a character entity.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162818,"byte_end":162900,"line_start":91,"line_end":91,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160150,"byte_end":160158,"line_start":14,"line_end":14,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"XmlEvent::{StartDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters}","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[{"value":"/ A part of an XML output stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":159986,"byte_end":160021,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160022,"byte_end":160025,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Objects of this enum are consumed by `EventWriter`. They correspond to different parts of","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160026,"byte_end":160119,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ an XML document.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":160120,"byte_end":160140,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163039,"byte_end":163061,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"fn (name: &'a str, data: Option<&'a str>) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"/ Returns an writer event for a processing instruction.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162956,"byte_end":163013,"line_start":96,"line_end":96,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163018,"byte_end":163027,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163381,"byte_end":163394,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"fn <S> (name: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"/ Returns a builder for a starting element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163196,"byte_end":163241,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163246,"byte_end":163249,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This builder can then be used to tweak attributes and namespace starting at","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163254,"byte_end":163333,"line_start":104,"line_end":104,"column_start":5,"column_end":84}},{"value":"/ this element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163338,"byte_end":163355,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163360,"byte_end":163369,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163979,"byte_end":163990,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"fn () -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"/ Returns a builder for an closing element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163627,"byte_end":163672,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163677,"byte_end":163680,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This method, unline `start_element()`, does not accept a name because by default","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163685,"byte_end":163769,"line_start":117,"line_end":117,"column_start":5,"column_end":89}},{"value":"/ the writer is able to determine it automatically. However, when this functionality","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163774,"byte_end":163860,"line_start":118,"line_end":118,"column_start":5,"column_end":91}},{"value":"/ is disabled, it is possible to specify the name with `name()` method on the builder.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163865,"byte_end":163953,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":163958,"byte_end":163967,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164268,"byte_end":164273,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"/ Returns a CDATA event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164072,"byte_end":164098,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164103,"byte_end":164106,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Naturally, the provided string won't be escaped, except for closing CDATA token `]]>`","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164111,"byte_end":164200,"line_start":127,"line_end":127,"column_start":5,"column_end":94}},{"value":"/ (depending on the configuration).","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164205,"byte_end":164242,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164247,"byte_end":164256,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164508,"byte_end":164518,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"/ Returns a regular characters (PCDATA) event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164336,"byte_end":164384,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164389,"byte_end":164392,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ All offending symbols, in particular, `&` and `<`, will be escaped by the writer.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164397,"byte_end":164482,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164487,"byte_end":164496,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164640,"byte_end":164647,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"/ Returns a comment event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164586,"byte_end":164614,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164619,"byte_end":164628,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164848,"byte_end":164865,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165387,"byte_end":165391,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"fn <N> (mut self, name: N) -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"/ Sets the name of this closing element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164982,"byte_end":165024,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165029,"byte_end":165032,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Usually the writer is able to determine closing element names automatically. If","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165037,"byte_end":165120,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/ this functionality is enabled (by default it is), then this name is checked for correctness.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165125,"byte_end":165221,"line_start":157,"line_end":157,"column_start":5,"column_end":101}},{"value":"/ It is possible, however, to disable such behavior; then the user must ensure that","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165226,"byte_end":165311,"line_start":158,"line_end":158,"column_start":5,"column_end":90}},{"value":"/ closing element name is correct manually.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165316,"byte_end":165361,"line_start":159,"line_end":159,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165366,"byte_end":165375,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165748,"byte_end":165767,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[{"value":"/ A builder for a starting element event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165693,"byte_end":165736,"line_start":173,"line_end":173,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166529,"byte_end":166533,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"fn <N> (mut self, name: N, value: &'a str) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"/ Sets an attribute value of this element to the given string.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165897,"byte_end":165961,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165966,"byte_end":165969,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This method can be used to add attributes to the starting element. Name is a qualified","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165974,"byte_end":166064,"line_start":183,"line_end":183,"column_start":5,"column_end":95}},{"value":"/ name; its namespace is ignored, but its prefix is checked for correctness, that is,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166069,"byte_end":166156,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/ it is checked that the prefix is bound to some namespace in the current context.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166161,"byte_end":166245,"line_start":185,"line_end":185,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166250,"byte_end":166253,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Currently attributes are not checked for duplicates. Note that duplicate attributes","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166258,"byte_end":166345,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ are a violation of XML document well-formedness.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166350,"byte_end":166402,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166407,"byte_end":166410,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The writer checks that you don't specify reserved prefix names, for example `xmlns`.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166415,"byte_end":166503,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166508,"byte_end":166517,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167432,"byte_end":167434,"line_start":212,"line_end":212,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"fn <S1, S2> (mut self, prefix: S1, uri: S2) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a namespace to the current namespace context.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166727,"byte_end":166781,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166786,"byte_end":166789,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If no namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166794,"byte_end":166881,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/ then the mapping from the prefix to the provided namespace URI will be written as","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166886,"byte_end":166971,"line_start":202,"line_end":202,"column_start":5,"column_end":90}},{"value":"/ a part of this element attribute set.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":166976,"byte_end":167017,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167022,"byte_end":167025,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If the same namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167030,"byte_end":167123,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ then no namespace attributes will be emitted.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167128,"byte_end":167177,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167182,"byte_end":167185,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If some other namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167190,"byte_end":167285,"line_start":208,"line_end":208,"column_start":5,"column_end":100}},{"value":"/ then another binding will be added as a part of this element attribute set, shadowing","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167290,"byte_end":167379,"line_start":209,"line_end":209,"column_start":5,"column_end":94}},{"value":"/ the outer binding.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167384,"byte_end":167406,"line_start":210,"line_end":210,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167411,"byte_end":167420,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167808,"byte_end":167818,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"fn <S> (mut self, uri: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a default namespace mapping to the current namespace context.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167621,"byte_end":167691,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167696,"byte_end":167699,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Same rules as for `ns()` are also valid for the default namespace mapping.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167704,"byte_end":167782,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":167787,"byte_end":167796,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136744,"byte_end":136755,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Write` instance which emits XML document according to provided","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136624,"byte_end":136720,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ events.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136721,"byte_end":136732,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136968,"byte_end":136971,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"fn (sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the default","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136834,"byte_end":136919,"line_start":27,"line_end":27,"column_start":5,"column_end":90}},{"value":"/ configuration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136924,"byte_end":136942,"line_start":28,"line_end":28,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136947,"byte_end":136956,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137212,"byte_end":137227,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"fn (sink: W, config: EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the provided","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137077,"byte_end":137163,"line_start":34,"line_end":34,"column_start":5,"column_end":91}},{"value":"/ configuration.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137168,"byte_end":137186,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137191,"byte_end":137200,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137855,"byte_end":137860,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"fn <'a, E> (&mut self, event: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[{"value":"/ Writes the next piece of XML document according to the provided event.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137389,"byte_end":137463,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137468,"byte_end":137471,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that output data may not exactly correspond to the written event because","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137476,"byte_end":137557,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ of various configuration options. For example, `XmlEvent::EndElement` may","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137562,"byte_end":137639,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ correspond to a separate closing element or it may cause writing an empty element.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137644,"byte_end":137730,"line_start":48,"line_end":48,"column_start":5,"column_end":91}},{"value":"/ Another example is that `XmlEvent::CData` may be represented as characters in","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137735,"byte_end":137816,"line_start":49,"line_end":49,"column_start":5,"column_end":86}},{"value":"/ the output stream.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":137821,"byte_end":137843,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139476,"byte_end":139486,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Unwraps this `EventWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139147,"byte_end":139211,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139216,"byte_end":139219,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this is a destructive operation: unwrapping a writer and then wrapping","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139224,"byte_end":139308,"line_start":77,"line_end":77,"column_start":5,"column_end":89}},{"value":"/ it again with `EventWriter::new()` will create a fresh writer whose state will be","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139313,"byte_end":139398,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/ blank; for example, accumulated namespaces will be reset.","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":139403,"byte_end":139464,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168379,"byte_end":168392,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168398,"byte_end":168402,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168424,"byte_end":168426,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168359,"byte_end":168372,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"CharReadError::{UnexpectedEof, Utf8, Io}","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1486}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":17882,"byte_end":17887,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":18487,"byte_end":18494,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19345,"byte_end":19352,"line_start":63,"line_end":63,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23973,"byte_end":23982,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27883,"byte_end":27897,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33683,"byte_end":33705,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33912,"byte_end":33934,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35579,"byte_end":35588,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35807,"byte_end":35821,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37174,"byte_end":37187,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":42239,"byte_end":42244,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":43591,"byte_end":43596,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":48364,"byte_end":48369,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":48515,"byte_end":48520,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":339},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\outside_tag.rs","byte_start":90397,"byte_end":90407,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":96162,"byte_end":96172,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_declaration.rs","byte_start":100342,"byte_end":100352,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_doctype.rs","byte_start":107430,"byte_end":107440,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":107912,"byte_end":107922,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":113754,"byte_end":113764,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_comment.rs","byte_start":115329,"byte_end":115339,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_cdata.rs","byte_start":116344,"byte_end":116354,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_reference.rs","byte_start":117255,"byte_end":117265,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":73155,"byte_end":73165,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":74190,"byte_end":74200,"line_start":125,"line_end":125,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":75677,"byte_end":75687,"line_start":205,"line_end":205,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":76814,"byte_end":76824,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122418,"byte_end":122430,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123835,"byte_end":123847,"line_start":106,"line_end":106,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128398,"byte_end":128406,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130030,"byte_end":130038,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133519,"byte_end":133524,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133662,"byte_end":133667,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133744,"byte_end":133749,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134242,"byte_end":134247,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134352,"byte_end":134357,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134602,"byte_end":134607,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135004,"byte_end":135009,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135172,"byte_end":135181,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135553,"byte_end":135562,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":136102,"byte_end":136111,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38123,"byte_end":38134,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39426,"byte_end":39437,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39640,"byte_end":39651,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40160,"byte_end":40166,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40358,"byte_end":40364,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40748,"byte_end":40759,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140689,"byte_end":140701,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140811,"byte_end":140823,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":141182,"byte_end":141194,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":142335,"byte_end":142342,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":143448,"byte_end":143455,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157686,"byte_end":157699,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159331,"byte_end":159344,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162937,"byte_end":162945,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164737,"byte_end":164745,"line_start":143,"line_end":143,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164954,"byte_end":164971,"line_start":153,"line_end":153,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165567,"byte_end":165575,"line_start":167,"line_end":167,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165867,"byte_end":165886,"line_start":180,"line_end":180,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":168015,"byte_end":168023,"line_start":231,"line_end":231,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136813,"byte_end":136824,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168471,"byte_end":168484,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168602,"byte_end":168615,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168723,"byte_end":168736,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":352,"byte_end":358,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":368,"byte_end":372,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":382,"byte_end":391,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":401,"byte_end":407,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":417,"byte_end":423,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":433,"byte_end":442,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":141}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":452,"byte_end":458,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src/lib.rs","byte_start":468,"byte_end":474,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":653}},{"kind":"Mod","span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136615,"byte_end":136621,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":762}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":35},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":7375}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":908},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":935},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":98}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":965},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":965},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":17882,"byte_end":17887,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":18487,"byte_end":18494,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\escape.rs","byte_start":19345,"byte_end":19352,"line_start":63,"line_end":63,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":23973,"byte_end":23982,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":27883,"byte_end":27897,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33683,"byte_end":33705,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":33912,"byte_end":33934,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":4723}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35579,"byte_end":35588,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":35807,"byte_end":35821,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":993},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\namespace.rs","byte_start":37174,"byte_end":37187,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":4640}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":42239,"byte_end":42244,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":43591,"byte_end":43596,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":48364,"byte_end":48369,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":98}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\lexer.rs","byte_start":48515,"byte_end":48520,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\outside_tag.rs","byte_start":90397,"byte_end":90407,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":96162,"byte_end":96172,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_declaration.rs","byte_start":100342,"byte_end":100352,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_doctype.rs","byte_start":107430,"byte_end":107440,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":107912,"byte_end":107922,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":113754,"byte_end":113764,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_comment.rs","byte_start":115329,"byte_end":115339,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_cdata.rs","byte_start":116344,"byte_end":116354,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\inside_reference.rs","byte_start":117255,"byte_end":117265,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":73155,"byte_end":73165,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":74190,"byte_end":74200,"line_start":125,"line_end":125,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":497},"to":{"krate":0,"index":98}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":75677,"byte_end":75687,"line_start":205,"line_end":205,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\parser\\mod.rs","byte_start":76814,"byte_end":76824,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":122418,"byte_end":122430,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\config.rs","byte_start":123835,"byte_end":123847,"line_start":106,"line_end":106,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":128398,"byte_end":128406,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":5923}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\events.rs","byte_start":130030,"byte_end":130038,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133519,"byte_end":133524,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133662,"byte_end":133667,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1315},"to":{"krate":0,"index":98}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":133744,"byte_end":133749,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134242,"byte_end":134247,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":1620}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134352,"byte_end":134357,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":134602,"byte_end":134607,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135004,"byte_end":135009,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135172,"byte_end":135181,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1562}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":135553,"byte_end":135562,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1588}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\error.rs","byte_start":136102,"byte_end":136111,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1593}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":38123,"byte_end":38134,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39426,"byte_end":39437,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":98}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":39640,"byte_end":39651,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":4631}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40160,"byte_end":40166,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40358,"byte_end":40364,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":4723}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\reader\\mod.rs","byte_start":40748,"byte_end":40759,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140689,"byte_end":140701,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":140811,"byte_end":140823,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":141182,"byte_end":141194,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":1620}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":142335,"byte_end":142342,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\emitter.rs","byte_start":143448,"byte_end":143455,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":157686,"byte_end":157699,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\config.rs","byte_start":159331,"byte_end":159344,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":1843}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":162937,"byte_end":162945,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164737,"byte_end":164745,"line_start":143,"line_end":143,"column_start":28,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":164954,"byte_end":164971,"line_start":153,"line_end":153,"column_start":10,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165567,"byte_end":165575,"line_start":167,"line_end":167,"column_start":42,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":165867,"byte_end":165886,"line_start":180,"line_end":180,"column_start":10,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\events.rs","byte_start":168015,"byte_end":168023,"line_start":231,"line_end":231,"column_start":44,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\writer\\mod.rs","byte_start":136813,"byte_end":136824,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168471,"byte_end":168484,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168602,"byte_end":168615,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":1776}},{"span":{"file_name":"C:\\Users\\M7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.3.6\\src\\util.rs","byte_start":168723,"byte_end":168736,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":5928}}]}